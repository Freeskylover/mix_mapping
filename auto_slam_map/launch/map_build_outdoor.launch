<?xml version="1.0"?>
<launch>

  <param name="use_sim_time" value="true"/>
  
  


  <!-- arguments -->
  <arg name="nodelet_manager" default="velodyne_nodelet_manager" />
  <arg name="enable_floor_detection" default="false" />
  <arg name="enable_gps" default="false" />
  <arg name="enable_imu_acc" default="false" />
  <arg name="enable_imu_ori" default="false" />
  <arg name="points_topic" default="/rslidar_points" />
  <include file="$(find auto_slam_map)/launch/run.launch">
  </include>

  <!-- transformation between lidar and base_link -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="camera_init_to_map"  args="0 0 0 0 0 0  map odom 10" /> -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="lidar2base_publisher" args="0.825 0 1.0794 0 0 0 base_link rslidar 10" /> -->
  <node pkg="tf" type="static_transform_publisher" name="lidar2base_publisher" args="0 0 0 0 0 0 rslidar base_link  10" />
  <!-- <node pkg="tf" type="static_transform_publisher" name="imu2base_publisher" args="0 0.825123 0.942 0 0 0 base_link imu 100" /> -->
  <node pkg="tf" type="static_transform_publisher" name="gps2base_publisher" args="0 0 0 0 0 0 base_link gps_link 10" />


  <!-- in case you use velodyne_driver, comment out the following line -->
  <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/>

  <node pkg="nodelet" type="nodelet" name="test" args="manager" output="screen"/>



  <!-- imageProjection_nodelet -->
  <!-- <node pkg="nodelet" type="nodelet" name="imageProjection_nodelet" args="load imageProjection_nodelet $(arg nodelet_manager)">
      <remap from="/velodyne_points" to="/rslidar_points"/>
  </node> -->


  <!-- featureAssociation_nodelet.cpp -->

  <!-- <node pkg="nodelet" type="nodelet" name="featureAssociation_nodelet" args="load featureAssociation_nodelet test"/> -->




  <!-- prefiltering_nodelet -->
  <node pkg="nodelet" type="nodelet" name="prefiltering_nodelet" args="load hdl_graph_slam/PrefilteringNodelet $(arg nodelet_manager)">
    <param name="points_topic" value="$(arg points_topic)" />
    <!-- in case base_link_frame is blank, mapping will be performed in the lidar frame -->
    <param name="base_link_frame" value="base_link" />
    <!-- distance filter -->
    <param name="use_distance_filter" value="true" />

    <!-- duo shao m yi nei de dian bu yao -->
    <param name="distance_near_thresh" value="1.5" />
    
    
    <param name="distance_far_thresh" value="100.0" />
    <!-- NONE, VOXELGRID, or APPROX_VOXELGRID -->
    <param name="downsample_method" value="VOXELGRID" />
    <param name="downsample_resolution" value="0.1" />
    <!-- NONE, RADIUS, or STATISTICAL -->
    <param name="outlier_removal_method" value="RADIUS" />
    <param name="statistical_mean_k" value="30" />
    <param name="statistical_stddev" value="1.2" />
    <param name="radius_radius" value="0.5" />
    <param name="radius_min_neighbors" value="2" />
  </node>

  <!-- scan_matching_odometry_nodelet -->
  <!-- <node pkg="nodelet" type="nodelet" name="scan_matching_odometry_nodelet" args="load hdl_graph_slam/ScanMatchingOdometryNodelet $(arg nodelet_manager)">
      <param name="points_topic" value="$(arg points_topic)" />
      <param name="odom_frame_id" value="odom" /> -->

      <!-- shi wai -->
      <!-- <param name="keyframe_delta_trans" value="2.9" />
      <param name="keyframe_delta_angle" value="4.0" />
      <param name="keyframe_delta_time" value="3.0" /> -->

      <!-- shi nei -->
      <!-- <param name="keyframe_delta_trans" value="0.25" />
      <param name="keyframe_delta_angle" value="1.0" />
      <param name="keyframe_delta_time" value="10.0" /> -->

      <!-- <param name="transform_thresholding" value="false" />
      <param name="max_acceptable_trans" value="1.0" />
      <param name="max_acceptable_angle" value="1.0" />
      <param name="downsample_method" value="NONE" />
      <param name="downsample_resolution" value="0.1" /> -->
      <!-- ICP, GICP, NDT, GICP_OMP, or NDT_OMP(recommended) -->
      <!-- <param name="registration_method" value="NDT_OMP" />
      <param name="ndt_resolution" value="1.0" />
      <param name="ndt_num_threads" value="0" />
      <param name="ndt_nn_search_method" value="DIRECT7" />
  </node> -->

  <!-- floor_detection_nodelet -->
  <node pkg="nodelet" type="nodelet" name="floor_detection_nodelet" args="load hdl_graph_slam/FloorDetectionNodelet $(arg nodelet_manager)" if="$(arg enable_floor_detection)">
    <param name="points_topic" value="$(arg points_topic)" />
    <param name="tilt_deg" value="0.0" />
    <param name="sensor_height" value="0.50" />
    <param name="height_clip_range" value="0.3" />
    <param name="floor_pts_thresh" value="128" />
    <param name="use_normal_filtering" value="false" />
    <param name="normal_filter_thresh" value="20.0" />
  </node>

  <!-- hdl_graph_slam_nodelet -->
  <node pkg="nodelet" type="nodelet" name="auto_slam_nodelet" args="load hdl_graph_slam/AutoSlamNodelet $(arg nodelet_manager)">
    <!-- <param name="points_topic" value="/floor_detection/floor_filtered_points" /> -->
    <param name="points_topic" value="/filtered_points" />
    <!-- frame settings -->
    <param name="map_frame_id" value="map" />
    <param name="odom_frame_id" value="odom" />
    <!-- optimization params -->
    <!-- typical solvers: gn_var, gn_fix6_3, gn_var_cholmod, lm_var, lm_fix6_3, lm_var_cholmod, ... -->
    <param name="g2o_solver_type" value="lm_var_cholmod" />
    <param name="g2o_solver_num_iterations" value="512" />
    <!-- keyframe registration params -->
    <param name="enable_gps" value="$(arg enable_gps)" />
    
    <!-- shi wai -->
    <param name="max_keyframes_per_update" value="10" />
    <param name="keyframe_delta_trans" value="2.9" />
    <param name="keyframe_delta_angle" value="4.0" />

    <!-- shi nei -->
    <!-- <param name="max_keyframes_per_update" value="10" />
    <param name="keyframe_delta_trans" value="1.0" />
    <param name="keyframe_delta_angle" value="2.0" /> -->

     <!-- shi nei loop closure params -->
    <!-- <param name="distance_thresh" value="10" />
    <param name="accum_distance_thresh" value="15" />
    <param name="min_edge_interval" value="1.0" />
    <param name="fitness_score_thresh" value="0.05" /> -->

    <!-- loop closure params -->
    <param name="distance_thresh" value="20.0" />
    <param name="accum_distance_thresh" value="25.0" />
    <param name="min_edge_interval" value="50.0" />
    <param name="fitness_score_thresh" value="0.01" />
    <!-- scan matching params -->
    <param name="registration_method" value="NDT_OMP" />
    <param name="ndt_resolution" value="1.0" />
    <param name="ndt_num_threads" value="0" />
    <param name="ndt_nn_search_method" value="DIRECT7" />
    <!-- edge params -->
    <!-- GPS -->
    <param name="gps_edge_robust_kernel" value="NONE" />
    <param name="gps_edge_robust_kernel_size" value="1.0" />
    <param name="gps_edge_stddev_xy" value="0.2" />     
    <param name="gps_edge_stddev_z" value="0.2" />      
    
    
    <!-- ground plane -->
    <param name="floor_edge_robust_kernel" value="NONE" />
    <param name="floor_edge_stddev" value="10.0" />
    <!-- scan matching -->
    <!-- robust kernels: NONE, Cauchy, DCS, Fair, GemanMcClure, Huber, PseudoHuber, Saturated, Tukey, Welsch -->
    <param name="odometry_edge_robust_kernel" value="NONE" />
    <param name="odometry_edge_robust_kernel_size" value="1.0" />
    <param name="loop_closure_edge_robust_kernel" value="Huber" />
    <param name="loop_closure_edge_robust_kernel_size" value="1.0" />
    <param name="use_const_inf_matrix" value="true" />
    <param name="const_stddev_x" value="2" />
    <param name="const_stddev_q" value="1" />
    <param name="var_gain_a" value="20.0" />    
    <param name="min_stddev_x" value="0.1" />    
    <param name="max_stddev_x" value="5.0" />    
    <param name="min_stddev_q" value="0.05" />    
    <param name="max_stddev_q" value="0.2" />    
    <!-- update params -->
    <param name="graph_update_interval" value="3.0" />
    <param name="map_cloud_update_interval" value="10.0" />
    <param name="map_cloud_resolution" value="0.05" />
    <!-- clip cloud 11.27-->
    <param name="height_clip_min" value="0" />
    <param name="height_clip_max" value="1" />
    <param name="sensor_height" value="0" />
  </node>

  <node pkg="auto_slam_map" type="map2odom_publisher.py" name="map2odom_publisher" />
  <!-- <node pkg="rosbag" type="play" name="playbag" args="clock /home/free/bag/first.bag"/> -->
  <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find auto_slam_map)/rviz/hdl_graph_slam.rviz"/>

</launch>
